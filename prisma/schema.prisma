// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_DIRECT")
}

model Book {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  author    String   @db.VarChar(255)
  available Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  loans Loan[]

  // Indexes
  @@index([title])
  @@index([author])
  @@index([available])
  @@map("books")
}

model Member {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @unique @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  loans Loan[]

  // Indexes
  @@index([email])
  @@map("members")
}

model Loan {
  id         Int       @id @default(autoincrement())
  bookId     Int       @map("book_id")
  memberId   Int       @map("member_id")
  loanDate   DateTime  @map("loan_date") @default(now())
  returnDate DateTime? @map("return_date")
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  // Relations
  book   Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)
  member Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([bookId])
  @@index([memberId])
  @@index([loanDate])
  @@index([returnDate])
  @@index([bookId, returnDate]) // For finding active loans by book
  @@map("loans")
}
